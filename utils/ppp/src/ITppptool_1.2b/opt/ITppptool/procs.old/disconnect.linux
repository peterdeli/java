proc disconnect { reason } {
	
	#puts "proc disconnect $reason" 

	global accounts
	global active_account 
	global challenge_entered
	global des_response
	global seconds_remaining
	set seconds_remaining 30
	global connection_state
	set challenge_entered "false"
	global pppd_id pppd_pid tip_id
	global link_disconnected 
	set link_disconnected "true"

	global ppp_interface serial_port ip_address
	global connection_type
	set connection_state "disconnecting"

	# connection scripts
	pre_disconnect

	log_message "Disconnecting: $reason "
	.footer.footer_r configure -text "Disconnecting: $reason" -justify left
	catch { destroy .des_dialog }

	global backup_resolv
	global manage_resolv

	# restore resolv.conf
	if { $accounts($active_account,resolv) == 1 } {
		puts "restoring file $backup_resolv"
		if { [file exists $backup_resolv] == 1 } {
			exec $manage_resolv restore $backup_resolv
		} 
	}
	if { [info exists ppp_interface] != 1 ||
					[string length $ppp_interface] < 1 } {
					log_message "Unable to determine ppp interface, trying IP address" 
				# see if ip_address present
				if { [info exists ip_address] != 1  ||
							[string length $ip_address] < 1 } {
					log_message "Unable to determine ip interface, exit ppptool to reset"
					#puts "close_pppd (a)"
					close_pppd
					close_ppp_tunnel
				} else {
				
					puts "find i/f based on $ip_address"
					set if_fd [open "|ifconfig -a"]
					set save ""
					while { [gets $if_fd line] != -1 } {
						#puts "i/f line: $line"
						if { [string first $ip_address $line] != -1 } {
							#puts "found $ip_address in $line"
							#puts "looking for i/f name in: $save"
							set ppp_interface [lindex [split $save " "] 0]
							#puts "ppp_interface: $ppp_interface"
							break
						}
						set save $line
					}
					close $if_fd
					log_message "Taking down interface $ppp_interface"
					if { [string length $ppp_interface] > 0 } {
						#puts "Terminating pppd process (a)"
						#puts "close_pppd (b)"
						close_pppd
						close_ppp_tunnel
					}
					
				}
			} else {

				#puts "Taking down interface $ppp_interface"
				#puts "Terminating pppd process (b)"
				#down_interface
				#puts "close_pppd (c)"
				close_pppd
				close_ppp_tunnel
			}


	.connect configure -state disabled 
	sleep 3
	.connect configure -text "Connect" -command connect  -state normal
	#puts "disconnect done"
	set link_disconnected "true"
	# connection script
	post_disconnect
}

