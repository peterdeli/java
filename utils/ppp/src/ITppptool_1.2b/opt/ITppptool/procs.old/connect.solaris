proc connect { } {

	global accounts
	global active_account 
	global challenge_entered
	global des_response
	global seconds_remaining
	set seconds_remaining 30
	global connection_state
	set challenge_entered "false"
	global ppp_interface serial_port ip_address

	# pre-connection scripts
	pre_connect

	log_messages "Connecting"
	set connection_state "connecting"
	init_blinking_bulbs
	.footer.footer_r configure -text "Connecting .."

	set connection_state "connecting"
	.connect configure -text "Disconnect" -state disabled -command {
		disconnect "Disconnected by User" 
	} 

	global backup_resolv
	set backup_resolv "" 
	global manage_resolv


	if { $accounts($active_account,resolv) == 1 } {

		# create resolv.conf, backup resolv.conf
		if { [file exists $accounts($active_account,resolv_file)] == 1 } {
			set backup_resolv "/etc/resolv.conf.ppp"
			# backup 'to'
			puts "exec $manage_resolv backup $backup_resolv" 
			exec $manage_resolv backup $backup_resolv 
			# copy 'from'
			puts "exec $manage_resolv copy $accounts($active_account,resolv_file)"
			exec $manage_resolv copy $accounts($active_account,resolv_file)
		} else {
			puts "file exists $accounts($active_account,resolv_file) != 1" 
			set backup_resolv "" 
		}

	}


	# kill any old pppd's
	catch { exec pkill pppd }

	# initialize modem
	if { [init_modem] != 0 } { 
		.footer.footer_r configure -text "Error Initializing Modem" 
		.connect configure -text "Connect" -command connect -state normal
		disconnect "Error Initializing Modem"
		return
	} else {
		.footer.footer_r configure -text "Modem Initialized" 
	}


	if { $accounts($active_account,authtype) == "tokencard" } {
		create_des_dialog
		modempool_connect
	} else {
		isp_connect
	}

}

