/*
 * LogWindow.java
 *
 * Created on December 1, 2003, 1:53 PM
 */

/**
 *
 * @author  pdel
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class NotifyWindow extends javax.swing.JFrame implements ComponentListener {
    
    private vpn3k UI;
    
    /** Creates new form LogWindow */
    public NotifyWindow() {
        initComponents();
        addComponentListener(this);
    }
    
    public NotifyWindow(vpn3k GUI){
        UI=GUI;
        initComponents();
        setLocation();
        addComponentListener(this);
    }
    
    public void getFocus(){
        setFocusTraversalKeysEnabled(true);
        setFocusableWindowState(true);
        setFocusable(true);
        requestFocusInWindow();
        closeButton.requestFocus();
        setVisible(true);
    }
    public void setLocation(){
        Point p = UI.getLocation();
        Dimension uiSize = UI.getSize();
        
        double x = p.getX();
        double y = p.getY();
        
        y = y/2;
        x = (int)x + ( uiSize.width / 2 );
        setLocation((int)x, (int)y );
    }
    public void doNotification(){
        //vpnNotify notification = new vpnNotify(this);
        if ( this.UI instanceof vpn3k ){
            String [] info = this.UI.NotificationInfo;
            if ( info != null ) {
                clearWin();
                appendTextArray( info );
            }
        }
    }
    
    
    public void appendText( String text ){
        this.jTextArea1.append(text);
        scrollLogWin();
    }
    
    public void appendTextArray( String[] text ){
        if ( text == null ) return;
        for ( int i=0; i<text.length; i++ ){
            this.jTextArea1.append( text[i] );
            this.jTextArea1.append( "\n" );
        }
        scrollLogWin();
        
    }
    public void clearWin() {
        // Add your handling code here:
        this.jTextArea1.setText(null);
        this.repaint();
    }
    
    public void clearWin(java.awt.event.ActionEvent evt) {
        // Add your handling code here:
        this.jTextArea1.setText(null);
        this.repaint();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CenterPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        ButtonPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setTitle("ITvpntool VPN 3000 Client  | Notifications");
        setBackground(new java.awt.Color(196, 196, 224));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        headerPanel.setBackground(new java.awt.Color(196, 196, 224));
        headerPanel.setMaximumSize(new java.awt.Dimension(87, 25));
        jLabel1.setBackground(new java.awt.Color(196, 196, 224));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Notifications");
        jLabel1.setMaximumSize(new java.awt.Dimension(85, 18));
        jLabel1.setMinimumSize(new java.awt.Dimension(85, 18));
        jLabel1.setPreferredSize(new java.awt.Dimension(85, 18));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        headerPanel.add(jLabel1);

        getContentPane().add(headerPanel, java.awt.BorderLayout.NORTH);

        CenterPanel.setLayout(new java.awt.BorderLayout(20, 0));

        CenterPanel.setBackground(new java.awt.Color(196, 196, 224));
        CenterPanel.setPreferredSize(new java.awt.Dimension(350, 200));
        jScrollPane1.setBackground(new java.awt.Color(196, 196, 224));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(350, 200));
        jTextArea1.setEditable(false);
        jTextArea1.setLineWrap(true);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        CenterPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(CenterPanel, java.awt.BorderLayout.CENTER);

        ButtonPanel.setBackground(new java.awt.Color(196, 196, 224));
        ButtonPanel.setMaximumSize(new java.awt.Dimension(80, 35));
        closeButton.setBackground(new java.awt.Color(196, 196, 224));
        closeButton.setMnemonic('c');
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideLogWin(evt);
            }
        });

        ButtonPanel.add(closeButton);

        getContentPane().add(ButtonPanel, java.awt.BorderLayout.SOUTH);

        jPanel1.setBackground(new java.awt.Color(196, 196, 224));
        getContentPane().add(jPanel1, java.awt.BorderLayout.EAST);

        jPanel2.setBackground(new java.awt.Color(196, 196, 224));
        getContentPane().add(jPanel2, java.awt.BorderLayout.WEST);

        pack();
    }//GEN-END:initComponents
    
    private void hideLogWin(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideLogWin
        // Add your handling code here:
        this.hide();
    }//GEN-LAST:event_hideLogWin
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        this.hide();
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        NotifyWindow nw = new NotifyWindow();
        nw.show();
        while ( true ) {
            nw.doNotification();
            try{
                Thread.currentThread().sleep( 3000 );
            } catch ( Exception x ){
                
            }
            nw.clearWin();
            
        }
    }
    
    public void scrollLogWin() {
        
        this.jTextArea1.setCaretPosition(jTextArea1.getText().length());
        this.invalidate();
    }
    
    public void componentHidden(ComponentEvent e) {
    }
    
    public void componentMoved(ComponentEvent e) {
    }
    
    public void componentResized(ComponentEvent e) {
    }
    
    public void componentShown(ComponentEvent e) {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JPanel ButtonPanel;
    protected javax.swing.JPanel CenterPanel;
    protected javax.swing.JButton closeButton;
    protected javax.swing.JPanel headerPanel;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JPanel jPanel2;
    protected javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
}
